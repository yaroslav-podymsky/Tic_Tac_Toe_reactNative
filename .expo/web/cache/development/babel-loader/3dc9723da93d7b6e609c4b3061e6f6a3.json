{"ast":null,"code":"import normalizeColor from \"./normalizeColor\";\nimport normalizeValueWithProperty from \"./normalizeValueWithProperty\";\nvar emptyObject = {};\nvar defaultOffset = {\n  height: 0,\n  width: 0\n};\nexport var createBoxShadowValue = function createBoxShadowValue(style) {\n  var shadowColor = style.shadowColor,\n      shadowOffset = style.shadowOffset,\n      shadowOpacity = style.shadowOpacity,\n      shadowRadius = style.shadowRadius;\n\n  var _ref = shadowOffset || defaultOffset,\n      height = _ref.height,\n      width = _ref.width;\n\n  var offsetX = normalizeValueWithProperty(width);\n  var offsetY = normalizeValueWithProperty(height);\n  var blurRadius = normalizeValueWithProperty(shadowRadius || 0);\n  var color = normalizeColor(shadowColor || 'black', shadowOpacity);\n\n  if (color != null && offsetX != null && offsetY != null && blurRadius != null) {\n    return \"\".concat(offsetX, \" \").concat(offsetY, \" \").concat(blurRadius, \" \").concat(color);\n  }\n};\nexport var createTextShadowValue = function createTextShadowValue(style) {\n  var textShadowColor = style.textShadowColor,\n      textShadowOffset = style.textShadowOffset,\n      textShadowRadius = style.textShadowRadius;\n\n  var _ref2 = textShadowOffset || defaultOffset,\n      height = _ref2.height,\n      width = _ref2.width;\n\n  var radius = textShadowRadius || 0;\n  var offsetX = normalizeValueWithProperty(width);\n  var offsetY = normalizeValueWithProperty(height);\n  var blurRadius = normalizeValueWithProperty(radius);\n  var color = normalizeValueWithProperty(textShadowColor, 'textShadowColor');\n\n  if (color && (height !== 0 || width !== 0 || radius !== 0) && offsetX != null && offsetY != null && blurRadius != null) {\n    return \"\".concat(offsetX, \" \").concat(offsetY, \" \").concat(blurRadius, \" \").concat(color);\n  }\n};\nexport var preprocess = function preprocess(originalStyle) {\n  var style = originalStyle || emptyObject;\n  var nextStyle = {};\n\n  for (var originalProp in style) {\n    var originalValue = style[originalProp];\n    var prop = originalProp;\n    var value = originalValue;\n\n    if (!Object.prototype.hasOwnProperty.call(style, originalProp) || originalValue == null) {\n      continue;\n    }\n\n    if (prop === 'elevation') continue;\n\n    if (prop === 'shadowColor' || prop === 'shadowOffset' || prop === 'shadowOpacity' || prop === 'shadowRadius') {\n      var boxShadowValue = createBoxShadowValue(style);\n\n      if (boxShadowValue != null && nextStyle.boxShadow == null) {\n        var boxShadow = style.boxShadow;\n        prop = 'boxShadow';\n        value = boxShadow ? \"\".concat(boxShadow, \", \").concat(boxShadowValue) : boxShadowValue;\n      } else {\n        continue;\n      }\n    }\n\n    if (prop === 'textShadowColor' || prop === 'textShadowOffset' || prop === 'textShadowRadius') {\n      var textShadowValue = createTextShadowValue(style);\n\n      if (textShadowValue != null && nextStyle.textShadow == null) {\n        var textShadow = style.textShadow;\n        prop = 'textShadow';\n        value = textShadow ? \"\".concat(textShadow, \", \").concat(textShadowValue) : textShadowValue;\n      } else {\n        continue;\n      }\n    }\n\n    nextStyle[prop] = value;\n  }\n\n  return nextStyle;\n};\nexport default preprocess;","map":{"version":3,"sources":["preprocess.ts"],"names":["emptyObject","defaultOffset","height","width","createBoxShadowValue","style","shadowRadius","shadowOffset","offsetX","normalizeValueWithProperty","offsetY","blurRadius","color","normalizeColor","shadowColor","createTextShadowValue","textShadowRadius","textShadowOffset","radius","preprocess","originalStyle","nextStyle","originalValue","prop","value","Object","boxShadowValue","boxShadow","textShadowValue","textShadow"],"mappings":"AAIA,OAAA,cAAA;AACA,OAAA,0BAAA;AAEA,IAAMA,WAAW,GAAjB,EAAA;AAMA,IAAMC,aAAa,GAAG;EAAEC,MAAM,EAAR,CAAA;EAAaC,KAAK,EAAE;AAApB,CAAtB;AAEA,OAAO,IAAMC,oBAAoB,GAAIC,SAAxBD,oBAAwBC,CAAAA,KAAD,EAA+B;EACjE,IAAM,WAAN,GAAA,KAAA,CAAM,WAAN;EAAA,IAAM,YAAN,GAAA,KAAA,CAAM,YAAN;EAAA,IAAM,aAAN,GAAA,KAAA,CAAM,aAAN;EAAA,IAAkDC,YAAlD,GAAA,KAAA,CAAkDA,YAAlD;;EACA,WAA0BC,YAAY,IAAtC,aAAA;EAAA,IAAM,MAAN,QAAM,MAAN;EAAA,IAAgBJ,KAAhB,QAAgBA,KAAhB;;EACA,IAAMK,OAAO,GAAGC,0BAA0B,CAA1C,KAA0C,CAA1C;EACA,IAAMC,OAAO,GAAGD,0BAA0B,CAA1C,MAA0C,CAA1C;EACA,IAAME,UAAU,GAAGF,0BAA0B,CAACH,YAAY,IAA1D,CAA6C,CAA7C;EACA,IAAMM,KAAK,GAAGC,cAAc,CAACC,WAAW,IAAZ,OAAA,EAA5B,aAA4B,CAA5B;;EACA,IACEF,KAAK,IAALA,IAAAA,IACAJ,OAAO,IADPI,IAAAA,IAEAF,OAAO,IAFPE,IAAAA,IAGAD,UAAU,IAJZ,IAAA,EAKE;IACA,OAAA,GAAA,MAAA,CAAA,OAAA,EAAA,GAAA,EAAA,MAAA,CAAA,OAAA,EAAA,GAAA,EAAA,MAAA,CAAA,UAAA,EAAA,GAAA,EAAA,MAAA,CAAA,KAAA,CAAA;EACD;AAdI,CAAA;AAiBP,OAAO,IAAMI,qBAAqB,GAAIV,SAAzBU,qBAAyBV,CAAAA,KAAD,EAA+B;EAClE,IAAM,eAAN,GAAA,KAAA,CAAM,eAAN;EAAA,IAAM,gBAAN,GAAA,KAAA,CAAM,gBAAN;EAAA,IAA2CW,gBAA3C,GAAA,KAAA,CAA2CA,gBAA3C;;EACA,YAA0BC,gBAAgB,IAA1C,aAAA;EAAA,IAAM,MAAN,SAAM,MAAN;EAAA,IAAgBd,KAAhB,SAAgBA,KAAhB;;EACA,IAAMe,MAAM,GAAGF,gBAAgB,IAA/B,CAAA;EACA,IAAMR,OAAO,GAAGC,0BAA0B,CAA1C,KAA0C,CAA1C;EACA,IAAMC,OAAO,GAAGD,0BAA0B,CAA1C,MAA0C,CAA1C;EACA,IAAME,UAAU,GAAGF,0BAA0B,CAA7C,MAA6C,CAA7C;EACA,IAAMG,KAAK,GAAGH,0BAA0B,CAAA,eAAA,EAAxC,iBAAwC,CAAxC;;EAEA,IACEG,KAAK,KACJV,MAAM,KAANA,CAAAA,IAAgBC,KAAK,KAArBD,CAAAA,IAA+BgB,MAAM,KADtCN,CAAK,CAALA,IAEAJ,OAAO,IAFPI,IAAAA,IAGAF,OAAO,IAHPE,IAAAA,IAIAD,UAAU,IALZ,IAAA,EAME;IACA,OAAA,GAAA,MAAA,CAAA,OAAA,EAAA,GAAA,EAAA,MAAA,CAAA,OAAA,EAAA,GAAA,EAAA,MAAA,CAAA,UAAA,EAAA,GAAA,EAAA,MAAA,CAAA,KAAA,CAAA;EACD;AAjBI,CAAA;AAuBP,OAAO,IAAMQ,UAAU,GAAIC,SAAdD,UAAcC,CAAAA,aAAD,EAAwB;EAChD,IAAMf,KAAK,GAAGe,aAAa,IAA3B,WAAA;EACA,IAAMC,SAAc,GAApB,EAAA;;EACA,KAAK,IAAL,YAAA,IAAA,KAAA,EAAkC;IAChC,IAAMC,aAAa,GAAGjB,KAAK,CAA3B,YAA2B,CAA3B;IAEA,IAAIkB,IAAI,GAAR,YAAA;IACA,IAAIC,KAAK,GAAT,aAAA;;IAEA,IACE,CAACC,MAAM,CAANA,SAAAA,CAAAA,cAAAA,CAAAA,IAAAA,CAAAA,KAAAA,EAAD,YAACA,CAAD,IACAH,aAAa,IAFf,IAAA,EAGE;MACA;IACD;;IAED,IAAIC,IAAI,KAAR,WAAA,EAbgC;;IAehC,IACEA,IAAI,KAAJA,aAAAA,IACAA,IAAI,KADJA,cAAAA,IAEAA,IAAI,KAFJA,eAAAA,IAGAA,IAAI,KAJN,cAAA,EAKE;MACA,IAAMG,cAAc,GAAGtB,oBAAoB,CAA3C,KAA2C,CAA3C;;MAEA,IAAIsB,cAAc,IAAdA,IAAAA,IAA0BL,SAAS,CAATA,SAAAA,IAA9B,IAAA,EAA2D;QACzD,IAAQM,SAAR,GAAA,KAAA,CAAQA,SAAR;QACAJ,IAAI,GAAJA,WAAAA;QACAC,KAAK,GAAGG,SAAS,GAAA,GAAA,MAAA,CAAA,SAAA,EAAA,IAAA,EAAA,MAAA,CAAA,cAAA,CAAA,GAAjBH,cAAAA;MAHF,CAAA,MAIO;QACL;MACD;IA7B6B;;IAiChC,IACED,IAAI,KAAJA,iBAAAA,IACAA,IAAI,KADJA,kBAAAA,IAEAA,IAAI,KAHN,kBAAA,EAIE;MACA,IAAMK,eAAe,GAAGb,qBAAqB,CAA7C,KAA6C,CAA7C;;MACA,IAAIa,eAAe,IAAfA,IAAAA,IAA2BP,SAAS,CAATA,UAAAA,IAA/B,IAAA,EAA6D;QAC3D,IAAQQ,UAAR,GAAA,KAAA,CAAQA,UAAR;QACAN,IAAI,GAAJA,YAAAA;QACAC,KAAK,GAAGK,UAAU,GAAA,GAAA,MAAA,CAAA,UAAA,EAAA,IAAA,EAAA,MAAA,CAAA,eAAA,CAAA,GAAlBL,eAAAA;MAHF,CAAA,MAMO;QACL;MACD;IACF;;IAEDH,SAAS,CAATA,IAAS,CAATA,GAAAA,KAAAA;EArD8C;;EAyDhD,OAAA,SAAA;AAzDK,CAAA;AA4DP,eAAA,UAAA","sourcesContent":["/* eslint-disable */\n//@ts-nocheck\n// This functions is taken from react native web\n\nimport normalizeColor from './normalizeColor';\nimport normalizeValueWithProperty from './normalizeValueWithProperty';\n\nconst emptyObject = {};\n\n/**\n * Shadows\n */\n\nconst defaultOffset = { height: 0, width: 0 };\n\nexport const createBoxShadowValue = (style: any): void | string => {\n  const { shadowColor, shadowOffset, shadowOpacity, shadowRadius } = style;\n  const { height, width } = shadowOffset || defaultOffset;\n  const offsetX = normalizeValueWithProperty(width);\n  const offsetY = normalizeValueWithProperty(height);\n  const blurRadius = normalizeValueWithProperty(shadowRadius || 0);\n  const color = normalizeColor(shadowColor || 'black', shadowOpacity);\n  if (\n    color != null &&\n    offsetX != null &&\n    offsetY != null &&\n    blurRadius != null\n  ) {\n    return `${offsetX} ${offsetY} ${blurRadius} ${color}`;\n  }\n};\n\nexport const createTextShadowValue = (style: any): void | string => {\n  const { textShadowColor, textShadowOffset, textShadowRadius } = style;\n  const { height, width } = textShadowOffset || defaultOffset;\n  const radius = textShadowRadius || 0;\n  const offsetX = normalizeValueWithProperty(width);\n  const offsetY = normalizeValueWithProperty(height);\n  const blurRadius = normalizeValueWithProperty(radius);\n  const color = normalizeValueWithProperty(textShadowColor, 'textShadowColor');\n\n  if (\n    color &&\n    (height !== 0 || width !== 0 || radius !== 0) &&\n    offsetX != null &&\n    offsetY != null &&\n    blurRadius != null\n  ) {\n    return `${offsetX} ${offsetY} ${blurRadius} ${color}`;\n  }\n};\n\n/**\n * Preprocess styles\n */\nexport const preprocess = (originalStyle: any) => {\n  const style = originalStyle || emptyObject;\n  const nextStyle: any = {};\n  for (const originalProp in style) {\n    const originalValue = style[originalProp];\n\n    let prop = originalProp;\n    let value = originalValue;\n\n    if (\n      !Object.prototype.hasOwnProperty.call(style, originalProp) ||\n      originalValue == null\n    ) {\n      continue;\n    }\n\n    if (prop === 'elevation') continue;\n    // Convert shadow styles\n    if (\n      prop === 'shadowColor' ||\n      prop === 'shadowOffset' ||\n      prop === 'shadowOpacity' ||\n      prop === 'shadowRadius'\n    ) {\n      const boxShadowValue = createBoxShadowValue(style);\n\n      if (boxShadowValue != null && nextStyle.boxShadow == null) {\n        const { boxShadow } = style;\n        prop = 'boxShadow';\n        value = boxShadow ? `${boxShadow}, ${boxShadowValue}` : boxShadowValue;\n      } else {\n        continue;\n      }\n    }\n\n    // Convert text shadow styles\n    if (\n      prop === 'textShadowColor' ||\n      prop === 'textShadowOffset' ||\n      prop === 'textShadowRadius'\n    ) {\n      const textShadowValue = createTextShadowValue(style);\n      if (textShadowValue != null && nextStyle.textShadow == null) {\n        const { textShadow } = style;\n        prop = 'textShadow';\n        value = textShadow\n          ? `${textShadow}, ${textShadowValue}`\n          : textShadowValue;\n      } else {\n        continue;\n      }\n    }\n\n    nextStyle[prop] = value;\n  }\n\n  // $FlowIgnore\n  return nextStyle;\n};\n\nexport default preprocess;\n"]},"metadata":{},"sourceType":"module"}