{"ast":null,"code":"export var convertStringNumberToNumber = function convertStringNumberToNumber(key, value) {\n  if (typeof value === 'string' && key !== 'fontWeight' && value && !isNaN(Number(value))) {\n    return parseFloat(value);\n  }\n\n  return value;\n};","map":{"version":3,"sources":["convertStringNumberToNumber.ts"],"names":["convertStringNumberToNumber","key","isNaN","Number","parseFloat"],"mappings":"AAEA,OAAO,IAAMA,2BAA2B,GAAG,SAA9BA,2BAA8B,CAAA,GAAA,EAAA,KAAA,EAAgC;EACzE,IACE,OAAA,KAAA,KAAA,QAAA,IACAC,GAAG,KADH,YAAA,IAAA,KAAA,IAGA,CAACC,KAAK,CAACC,MAAM,CAJf,KAIe,CAAP,CAJR,EAKE;IACA,OAAOC,UAAU,CAAjB,KAAiB,CAAjB;EACD;;EAED,OAAA,KAAA;AAVK,CAAA","sourcesContent":["// For backward compatibility with 3.0 of props like non token string numbers `<Box mt={\"39\"} />` => used to get applied as 39px. RN expects fontWeight to be string and crashes with numbers\n// https://reactnative.dev/docs/text-style-props#fontweight\nexport const convertStringNumberToNumber = (key: string, value: string) => {\n  if (\n    typeof value === 'string' &&\n    key !== 'fontWeight' &&\n    value &&\n    !isNaN(Number(value))\n  ) {\n    return parseFloat(value);\n  }\n\n  return value;\n};\n"]},"metadata":{},"sourceType":"module"}