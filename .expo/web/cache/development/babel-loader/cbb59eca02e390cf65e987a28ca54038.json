{"ast":null,"code":"import normalizeValueWithProperty from \"./normalizeValueWithProperty\";\nvar canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\nvar emptyObject = {};\nvar supportsCSS3TextDecoration = !canUseDOM || window.CSS != null && window.CSS.supports != null && (window.CSS.supports('text-decoration-line', 'none') || window.CSS.supports('-webkit-text-decoration-line', 'none'));\nvar ignoredProps = {\n  elevation: true,\n  overlayColor: true,\n  resizeMode: true,\n  tintColor: true\n};\nvar MONOSPACE_FONT_STACK = 'monospace,monospace';\nvar SYSTEM_FONT_STACK = '-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif';\nvar STYLE_SHORT_FORM_EXPANSIONS = {\n  borderColor: ['borderTopColor', 'borderRightColor', 'borderBottomColor', 'borderLeftColor'],\n  borderRadius: ['borderTopLeftRadius', 'borderTopRightRadius', 'borderBottomRightRadius', 'borderBottomLeftRadius'],\n  borderStyle: ['borderTopStyle', 'borderRightStyle', 'borderBottomStyle', 'borderLeftStyle'],\n  borderWidth: ['borderTopWidth', 'borderRightWidth', 'borderBottomWidth', 'borderLeftWidth'],\n  marginHorizontal: ['marginRight', 'marginLeft'],\n  marginVertical: ['marginTop', 'marginBottom'],\n  overflow: ['overflowX', 'overflowY'],\n  overscrollBehavior: ['overscrollBehaviorX', 'overscrollBehaviorY'],\n  paddingHorizontal: ['paddingRight', 'paddingLeft'],\n  paddingVertical: ['paddingTop', 'paddingBottom']\n};\n\nvar mapTransform = function mapTransform(transform) {\n  var type = Object.keys(transform)[0];\n  var value = transform[type];\n\n  if (type === 'matrix' || type === 'matrix3d') {\n    return \"\".concat(type, \"(\").concat(value.join(','), \")\");\n  } else {\n    var normalizedValue = normalizeValueWithProperty(value, type);\n    return \"\".concat(type, \"(\").concat(normalizedValue, \")\");\n  }\n};\n\nexport var createTransformValue = function createTransformValue(style) {\n  var transform = style.transform;\n\n  if (Array.isArray(style.transform)) {\n    transform = style.transform.map(mapTransform).join(' ');\n  }\n\n  return transform;\n};\n\nvar createReactDOMStyle = function createReactDOMStyle(style, isInline) {\n  if (!style) {\n    return emptyObject;\n  }\n\n  var resolvedStyle = {};\n\n  for (var prop in style) {\n    var value = style[prop];\n\n    if (value == null || ignoredProps[prop]) {\n      continue;\n    }\n\n    if (prop === 'aspectRatio') {\n      resolvedStyle[prop] = value.toString();\n    } else if (prop === 'backgroundClip') {\n      if (value === 'text') {\n        resolvedStyle.backgroundClip = value;\n        resolvedStyle.WebkitBackgroundClip = value;\n      }\n    } else if (prop === 'flex') {\n      if (value === -1) {\n        resolvedStyle.flexGrow = 0;\n        resolvedStyle.flexShrink = 1;\n        resolvedStyle.flexBasis = 'auto';\n      } else {\n        resolvedStyle.flex = value;\n      }\n    } else if (prop === 'font') {\n      resolvedStyle[prop] = value.replace('System', SYSTEM_FONT_STACK);\n    } else if (prop === 'fontFamily') {\n      if (value.indexOf('System') > -1) {\n        var stack = value.split(/,\\s*/);\n        stack[stack.indexOf('System')] = SYSTEM_FONT_STACK;\n        resolvedStyle[prop] = stack.join(',');\n      } else if (value === 'monospace') {\n        resolvedStyle[prop] = MONOSPACE_FONT_STACK;\n      } else {\n        resolvedStyle[prop] = value;\n      }\n    } else if (prop === 'fontVariant') {\n      if (Array.isArray(value) && value.length > 0) {\n        resolvedStyle.fontVariant = value.join(' ');\n      }\n    } else if (prop === 'textAlignVertical') {\n      resolvedStyle.verticalAlign = value === 'center' ? 'middle' : value;\n    } else if (prop === 'textDecorationLine') {\n      if (!supportsCSS3TextDecoration) {\n        resolvedStyle.textDecoration = value;\n      } else {\n        resolvedStyle.textDecorationLine = value;\n      }\n    } else if (prop === 'transform' || prop === 'transformMatrix') {\n      resolvedStyle.transform = createTransformValue(style);\n    } else if (prop === 'writingDirection') {\n      resolvedStyle.direction = value;\n    } else {\n      (function () {\n        var value = normalizeValueWithProperty(style[prop], prop);\n        var longFormProperties = STYLE_SHORT_FORM_EXPANSIONS[prop];\n\n        if (isInline && prop === 'margin') {\n          if (style.marginHorizontal == null) {\n            resolvedStyle.marginLeft = value;\n            resolvedStyle.marginRight = value;\n          }\n\n          if (style.marginVertical == null) {\n            resolvedStyle.marginTop = value;\n            resolvedStyle.marginBottom = value;\n          }\n        } else if (isInline && prop === 'padding') {\n          if (style.paddingHorizontal == null) {\n            resolvedStyle.paddingLeft = value;\n            resolvedStyle.paddingRight = value;\n          }\n\n          if (style.paddingVertical == null) {\n            resolvedStyle.paddingTop = value;\n            resolvedStyle.paddingBottom = value;\n          }\n        } else if (longFormProperties) {\n          longFormProperties.forEach(function (longForm, _i) {\n            if (style[longForm] == null) {\n              resolvedStyle[longForm] = value;\n            }\n          });\n        } else {\n          resolvedStyle[prop] = Array.isArray(value) ? value.join(',') : value;\n        }\n      })();\n    }\n  }\n\n  return resolvedStyle;\n};\n\nexport default createReactDOMStyle;","map":{"version":3,"sources":["createReactDOMStyle.ts"],"names":["canUseDOM","window","emptyObject","supportsCSS3TextDecoration","ignoredProps","elevation","overlayColor","resizeMode","tintColor","MONOSPACE_FONT_STACK","SYSTEM_FONT_STACK","STYLE_SHORT_FORM_EXPANSIONS","borderColor","borderRadius","borderStyle","borderWidth","marginHorizontal","marginVertical","overflow","overscrollBehavior","paddingHorizontal","paddingVertical","mapTransform","transform","type","Object","value","normalizedValue","normalizeValueWithProperty","createTransformValue","style","Array","createReactDOMStyle","resolvedStyle","prop","stack","longFormProperties","isInline"],"mappings":"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","sourcesContent":["/* eslint-disable */\n//@ts-nocheck\n// This functions is taken from react native web\n\nimport normalizeValueWithProperty from './normalizeValueWithProperty';\n\ntype Style = { [key: string]: any };\nconst canUseDOM: boolean = !!(\n  typeof window !== 'undefined' &&\n  window.document &&\n  window.document.createElement\n);\n\n/**\n * The browser implements the CSS cascade, where the order of properties is a\n * factor in determining which styles to paint. React Native is different. It\n * gives giving precedence to the more specific style property. For example,\n * the value of `paddingTop` takes precedence over that of `padding`.\n *\n * This module creates mutally exclusive style declarations by expanding all of\n * React Native's supported shortform properties (e.g. `padding`) to their\n * longfrom equivalents.\n */\n\nconst emptyObject = {};\n\nconst supportsCSS3TextDecoration =\n  !canUseDOM ||\n  (window.CSS != null &&\n    window.CSS.supports != null &&\n    (window.CSS.supports('text-decoration-line', 'none') ||\n      window.CSS.supports('-webkit-text-decoration-line', 'none')));\n\nconst ignoredProps: {\n  elevation: boolean;\n  overlayColor: boolean;\n  resizeMode: boolean;\n  tintColor: boolean;\n} = {\n  elevation: true,\n  overlayColor: true,\n  resizeMode: true,\n  tintColor: true,\n};\n\nconst MONOSPACE_FONT_STACK = 'monospace,monospace';\n\nconst SYSTEM_FONT_STACK =\n  '-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif';\n\nconst STYLE_SHORT_FORM_EXPANSIONS: any = {\n  borderColor: [\n    'borderTopColor',\n    'borderRightColor',\n    'borderBottomColor',\n    'borderLeftColor',\n  ],\n  borderRadius: [\n    'borderTopLeftRadius',\n    'borderTopRightRadius',\n    'borderBottomRightRadius',\n    'borderBottomLeftRadius',\n  ],\n  borderStyle: [\n    'borderTopStyle',\n    'borderRightStyle',\n    'borderBottomStyle',\n    'borderLeftStyle',\n  ],\n  borderWidth: [\n    'borderTopWidth',\n    'borderRightWidth',\n    'borderBottomWidth',\n    'borderLeftWidth',\n  ],\n  marginHorizontal: ['marginRight', 'marginLeft'],\n  marginVertical: ['marginTop', 'marginBottom'],\n  overflow: ['overflowX', 'overflowY'],\n  overscrollBehavior: ['overscrollBehaviorX', 'overscrollBehaviorY'],\n  paddingHorizontal: ['paddingRight', 'paddingLeft'],\n  paddingVertical: ['paddingTop', 'paddingBottom'],\n};\n\n/**\n * Transform\n */\n\n// { scale: 2 } => 'scale(2)'\n// { translateX: 20 } => 'translateX(20px)'\n// { matrix: [1,2,3,4,5,6] } => 'matrix(1,2,3,4,5,6)'\nconst mapTransform = (transform: Object): string => {\n  const type = Object.keys(transform)[0];\n  //@ts-ignore\n  const value = transform[type];\n  if (type === 'matrix' || type === 'matrix3d') {\n    return `${type}(${value.join(',')})`;\n  } else {\n    const normalizedValue = normalizeValueWithProperty(value, type);\n    return `${type}(${normalizedValue})`;\n  }\n};\n\nexport const createTransformValue = (style: Style): string => {\n  let transform = style.transform;\n  if (Array.isArray(style.transform)) {\n    transform = style.transform.map(mapTransform).join(' ');\n  }\n  return transform;\n};\n\n/**\n * Reducer\n */\n\nconst createReactDOMStyle = (style: Style, isInline?: boolean): Style => {\n  if (!style) {\n    return emptyObject;\n  }\n\n  const resolvedStyle: any = {};\n\n  for (const prop in style) {\n    const value = style[prop];\n\n    if (\n      // Ignore everything with a null value\n      value == null ||\n      // Ignore some React Native styles\n      //@ts-ignore\n      ignoredProps[prop]\n    ) {\n      continue;\n    }\n\n    if (prop === 'aspectRatio') {\n      resolvedStyle[prop] = value.toString();\n    } else if (prop === 'backgroundClip') {\n      // TODO: remove once this issue is fixed\n      // https://github.com/rofrischmann/inline-style-prefixer/issues/159\n      if (value === 'text') {\n        resolvedStyle.backgroundClip = value;\n        resolvedStyle.WebkitBackgroundClip = value;\n      }\n    } else if (prop === 'flex') {\n      if (value === -1) {\n        resolvedStyle.flexGrow = 0;\n        resolvedStyle.flexShrink = 1;\n        resolvedStyle.flexBasis = 'auto';\n      } else {\n        resolvedStyle.flex = value;\n      }\n    } else if (prop === 'font') {\n      resolvedStyle[prop] = value.replace('System', SYSTEM_FONT_STACK);\n    } else if (prop === 'fontFamily') {\n      if (value.indexOf('System') > -1) {\n        const stack = value.split(/,\\s*/);\n        stack[stack.indexOf('System')] = SYSTEM_FONT_STACK;\n        resolvedStyle[prop] = stack.join(',');\n      } else if (value === 'monospace') {\n        resolvedStyle[prop] = MONOSPACE_FONT_STACK;\n      } else {\n        resolvedStyle[prop] = value;\n      }\n    } else if (prop === 'fontVariant') {\n      if (Array.isArray(value) && value.length > 0) {\n        resolvedStyle.fontVariant = value.join(' ');\n      }\n    } else if (prop === 'textAlignVertical') {\n      resolvedStyle.verticalAlign = value === 'center' ? 'middle' : value;\n    } else if (prop === 'textDecorationLine') {\n      // use 'text-decoration' for browsers that only support CSS2\n      // text-decoration (e.g., IE, Edge)\n      if (!supportsCSS3TextDecoration) {\n        resolvedStyle.textDecoration = value;\n      } else {\n        resolvedStyle.textDecorationLine = value;\n      }\n    } else if (prop === 'transform' || prop === 'transformMatrix') {\n      resolvedStyle.transform = createTransformValue(style);\n    } else if (prop === 'writingDirection') {\n      resolvedStyle.direction = value;\n    } else {\n      const value = normalizeValueWithProperty(style[prop], prop);\n      const longFormProperties = STYLE_SHORT_FORM_EXPANSIONS[prop];\n      if (isInline && prop === 'margin') {\n        if (style.marginHorizontal == null) {\n          resolvedStyle.marginLeft = value;\n          resolvedStyle.marginRight = value;\n        }\n        if (style.marginVertical == null) {\n          resolvedStyle.marginTop = value;\n          resolvedStyle.marginBottom = value;\n        }\n      } else if (isInline && prop === 'padding') {\n        if (style.paddingHorizontal == null) {\n          resolvedStyle.paddingLeft = value;\n          resolvedStyle.paddingRight = value;\n        }\n        if (style.paddingVertical == null) {\n          resolvedStyle.paddingTop = value;\n          resolvedStyle.paddingBottom = value;\n        }\n      } else if (longFormProperties) {\n        longFormProperties.forEach((longForm: any, _i: any) => {\n          // The value of any longform property in the original styles takes\n          // precedence over the shortform's value.\n          if (style[longForm] == null) {\n            resolvedStyle[longForm] = value;\n          }\n        });\n      } else {\n        resolvedStyle[prop] = Array.isArray(value) ? value.join(',') : value;\n      }\n    }\n  }\n\n  return resolvedStyle;\n};\n\nexport default createReactDOMStyle;\n"]},"metadata":{},"sourceType":"module"}