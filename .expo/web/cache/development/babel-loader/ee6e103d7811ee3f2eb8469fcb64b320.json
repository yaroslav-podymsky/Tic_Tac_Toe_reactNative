{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\", \"contain\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React from 'react';\nimport { FocusScope as AriaFocusScope, useFocusManager } from '@react-aria/focus';\n\nvar FocusScope = function FocusScope(_ref) {\n  var children = _ref.children,\n      contain = _ref.contain,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return React.createElement(AriaFocusScope, _extends({\n    contain: contain\n  }, props), children);\n};\n\nexport { FocusScope, useFocusManager };","map":{"version":3,"sources":["FocusScope.web.tsx"],"names":["FocusScope","props","contain"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,MAAA,OAAA;AACA,SACEA,UAAU,IADZ,cAAA,EAAA,eAAA,QAAA,mBAAA;;AAKA,IAAMA,UAAU,GAAG,SAAbA,UAAa,OAAsD;EAAA,IAArD,QAAqD,QAArD,QAAqD;EAAA,IAArD,OAAqD,QAArD,OAAqD;EAAA,IAA7BC,KAA6B;;EAIvE,OACE,KAAA,CAAA,aAAA,CAAA,cAAA,EAAA,QAAA,CAAA;IAAgB,OAAO,EAAEC;EAAzB,CAAA,EAAA,KAAA,CAAA,EADF,QACE,CADF;AAJF,CAAA;;AAWA,SAAA,UAAA,EAAA,eAAA","sourcesContent":["import React from 'react';\nimport {\n  FocusScope as AriaFocusScope,\n  useFocusManager,\n} from '@react-aria/focus';\nimport type { FocusScopeProps } from './FocusScope';\nconst FocusScope = ({ children, contain, ...props }: FocusScopeProps) => {\n  /* Todo: stoping mounted and unMounted everytime contain is change */\n  // if (contain === false) return <></>;\n\n  return (\n    <AriaFocusScope contain={contain} {...props}>\n      {children}\n    </AriaFocusScope>\n  );\n};\n\nexport { FocusScope, useFocusManager };\n"]},"metadata":{},"sourceType":"module"}