{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\", \"_state\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React, { useMemo } from 'react';\nimport { usePropsWithComponentTheme } from \"../hooks/useThemeProps/usePropsWithComponentTheme\";\nimport { makeStyledComponent } from \"../utils/styled\";\nexport default function Factory(Component, componentTheme) {\n  return React.forwardRef(function (_ref, ref) {\n    var children = _ref.children,\n        _state = _ref._state,\n        props = _objectWithoutProperties(_ref, _excluded);\n\n    var StyledComponent = useMemo(function () {\n      return makeStyledComponent(Component);\n    }, []);\n    var calculatedProps = usePropsWithComponentTheme(componentTheme !== null && componentTheme !== void 0 ? componentTheme : {}, props, _state);\n    return React.createElement(StyledComponent, _extends({}, calculatedProps, {\n      ref: ref\n    }), children);\n  });\n}","map":{"version":3,"sources":["component.tsx"],"names":["props","StyledComponent","useMemo","makeStyledComponent","calculatedProps","usePropsWithComponentTheme","componentTheme","ref"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,IAAA,OAAA,QAAA,OAAA;AACA,SAAA,0BAAA;AAGA,SAAA,mBAAA;AAEA,eAAe,SAAA,OAAA,CAAA,SAAA,EAAA,cAAA,EAGb;EACA,OAAO,KAAK,CAAL,UAAA,CACL,gBAAA,GAAA,EAAyE;IAAA,IAAxE,QAAwE,QAAxE,QAAwE;IAAA,IAAxE,MAAwE,QAAxE,MAAwE;IAAA,IAAjDA,KAAiD;;IACvE,IAAMC,eAAe,GAAGC,OAAO,CAAC;MAAA,OAAMC,mBAAmB,CAA1B,SAA0B,CAAzB;IAAA,CAAD,EAA/B,EAA+B,CAA/B;IACA,IAAMC,eAAe,GAAGC,0BAA0B,CAChDC,cADgD,KAAA,IAChDA,IAAAA,cADgD,KAAA,KAAA,CAChDA,GADgD,cAChDA,GADgD,EAAA,EAAA,KAAA,EAAlD,MAAkD,CAAlD;IAKA,OACE,KAAA,CAAA,aAAA,CAAA,eAAA,EAAA,QAAA,CAAA,EAAA,EAAA,eAAA,EAAA;MAA6C,GAAG,EAAEC;IAAlD,CAAA,CAAA,EADF,QACE,CADF;EARJ,CAAO,CAAP;AAeD","sourcesContent":["import React, { useMemo } from 'react';\nimport { usePropsWithComponentTheme } from '../hooks/useThemeProps/usePropsWithComponentTheme';\nimport type { ComponentTheme } from '../theme';\nimport type { FactoryComponentProps } from './types';\nimport { makeStyledComponent } from '../utils/styled';\n\nexport default function Factory<P>(\n  Component: React.ComponentType<P>,\n  componentTheme?: ComponentTheme\n) {\n  return React.forwardRef(\n    ({ children, _state, ...props }: P & FactoryComponentProps, ref: any) => {\n      const StyledComponent = useMemo(() => makeStyledComponent(Component), []);\n      const calculatedProps = usePropsWithComponentTheme(\n        componentTheme ?? {},\n        props,\n        _state\n      );\n      return (\n        <StyledComponent {...(calculatedProps as P)} ref={ref}>\n          {children}\n        </StyledComponent>\n      );\n    }\n  );\n}\n"]},"metadata":{},"sourceType":"module"}