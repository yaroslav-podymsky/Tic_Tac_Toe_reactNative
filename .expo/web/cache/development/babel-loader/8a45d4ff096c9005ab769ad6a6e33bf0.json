{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport React, { useState, useEffect } from \"react\";\nimport Cells from \"./Cells\";\nimport reset from \"../assets/reset.png\";\nimport { Square } from 'native-base';\nimport Cell from \"./Cell\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function GameWindow(_ref) {\n  var route = _ref.route;\n  var player = route.params.player;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      circleOrCross = _useState2[0],\n      setCircleOrCross = _useState2[1];\n\n  var _useState3 = useState(['', '', '', '', '', '', '', '', '']),\n      _useState4 = _slicedToArray(_useState3, 2),\n      gridArr = _useState4[0],\n      setGridArr = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      showCircleOrCross = _useState6[0],\n      setShowCircleOrCross = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      result = _useState8[0],\n      setResult = _useState8[1];\n\n  var getRandomNumber = function getRandomNumber() {\n    var randomNumber = Date.now();\n    var quontityNumber = randomNumber.toString().length;\n    var lastNumber = randomNumber.toString();\n    return lastNumber[quontityNumber - 1];\n  };\n\n  var victories = function victories(arrForExamination) {\n    var options = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n    for (var i = 0; i < options.length; i++) {\n      var _options$i = _slicedToArray(options[i], 3),\n          a = _options$i[0],\n          b = _options$i[1],\n          c = _options$i[2];\n\n      if (arrForExamination[a] && arrForExamination[a] === arrForExamination[b] && arrForExamination[a] === arrForExamination[c]) {\n        return [a, b, c];\n      }\n    }\n\n    return null;\n  };\n\n  var autoClick = function autoClick() {\n    if (victories(gridArr)) return;\n    var examination = gridArr.filter(function (el) {\n      return el === '';\n    });\n    if (examination.length === 0) return;\n    setShowCircleOrCross(true);\n    var randomMove = getRandomNumber();\n\n    if (randomMove === '9') {\n      return autoClick();\n    }\n\n    var checkingElementExistsAutoClick = _toConsumableArray(gridArr);\n\n    if (checkingElementExistsAutoClick[randomMove]) {\n      return autoClick();\n    }\n\n    checkingElementExistsAutoClick[randomMove] = circleOrCross ? 'x' : 'o';\n    setGridArr(checkingElementExistsAutoClick);\n    setCircleOrCross(!circleOrCross);\n  };\n\n  useEffect(function () {\n    if (player === 1 && !circleOrCross) {\n      autoClick();\n    }\n  }, [circleOrCross, player]);\n\n  var clickCount = function clickCount(index) {\n    setShowCircleOrCross(true);\n\n    var checkingElementExists = _toConsumableArray(gridArr);\n\n    if (victories(gridArr) || checkingElementExists[index]) return;\n    checkingElementExists[index] = circleOrCross ? 'x' : 'o';\n    setGridArr(checkingElementExists);\n    setCircleOrCross(!circleOrCross);\n  };\n\n  useEffect(function () {\n    var winner = victories(gridArr);\n    if (winner && winner.length === 3) setResult(winner);\n  }, [gridArr]);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [console.log('GameWindow'), _jsx(Button, {\n      title: \"1\",\n      onPress: function onPress() {\n        autoClick();\n      }\n    }), _jsx(TouchableOpacity, {\n      style: {\n        position: 'absolute',\n        top: '5%',\n        right: '10%'\n      },\n      onPress: function onPress() {\n        setGridArr(['', '', '', '', '', '', '', '', '']);\n        setCircleOrCross(true);\n        setShowCircleOrCross(false);\n        setResult([]);\n      },\n      children: _jsx(Image, {\n        source: reset\n      })\n    }), _jsxs(View, {\n      style: styles.gridBlock,\n      children: [_jsx(Cell, {\n        result: result.filter(function (el) {\n          return el === 0;\n        }),\n        value: gridArr[0],\n        index: 0,\n        clickEL: clickCount\n      }, 0), _jsx(Cell, {\n        result: result.filter(function (el) {\n          return el === 1;\n        }),\n        value: gridArr[1],\n        index: 1,\n        clickEL: clickCount\n      }, 1), _jsx(Cell, {\n        result: result.filter(function (el) {\n          return el === 2;\n        }),\n        value: gridArr[2],\n        index: 2,\n        clickEL: clickCount\n      }, 2), _jsx(Cell, {\n        result: result.filter(function (el) {\n          return el === 3;\n        }),\n        value: gridArr[3],\n        index: 3,\n        clickEL: clickCount\n      }, 3), _jsx(Cell, {\n        result: result.filter(function (el) {\n          return el === 4;\n        }),\n        value: gridArr[4],\n        index: 4,\n        clickEL: clickCount\n      }, 4), _jsx(Cell, {\n        result: result.filter(function (el) {\n          return el === 5;\n        }),\n        value: gridArr[5],\n        index: 5,\n        clickEL: clickCount\n      }, 5), _jsx(Cell, {\n        result: result.filter(function (el) {\n          return el === 6;\n        }),\n        value: gridArr[6],\n        index: 6,\n        clickEL: clickCount\n      }, 6), _jsx(Cell, {\n        result: result.filter(function (el) {\n          return el === 7;\n        }),\n        value: gridArr[7],\n        index: 7,\n        clickEL: clickCount,\n        c: true\n      }, 7), _jsx(Cell, {\n        result: result.filter(function (el) {\n          return el === 8;\n        }),\n        value: gridArr[8],\n        index: 8,\n        clickEL: clickCount\n      }, 8)]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  gridBlock: {\n    width: 320,\n    paddingHorizontal: 10,\n    alignItems: 'center',\n    justifyContent: 'center',\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap'\n  },\n  buttonWrapper: {\n    backgroundColor: '#000',\n    width: 80,\n    heigth: 20,\n    position: 'absolute',\n    top: '5%',\n    right: '5%',\n    width: 80,\n    heigth: 20,\n    color: '#000',\n    flexDirection: 'row',\n    textTransform: 'uppercase'\n  },\n  container: {\n    paddingHorizontal: 15,\n    paddingVertical: 15,\n    flex: 1,\n    backgroundColor: '#000',\n    alignItems: \"center\",\n    justifyContent: 'center'\n  },\n  title: {\n    top: 0,\n    textTransform: \"uppercase\",\n    color: \"white\",\n    fontSize: 15\n  },\n  topBlock: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    marginBottom: '10%'\n  },\n  gridBlock: {\n    width: 320,\n    paddingHorizontal: 10,\n    alignItems: 'center',\n    justifyContent: 'center',\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap'\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","Cells","reset","Square","Cell","GameWindow","route","player","params","circleOrCross","setCircleOrCross","gridArr","setGridArr","showCircleOrCross","setShowCircleOrCross","result","setResult","getRandomNumber","randomNumber","Date","now","quontityNumber","toString","length","lastNumber","victories","arrForExamination","options","i","a","b","c","autoClick","examination","filter","el","randomMove","checkingElementExistsAutoClick","clickCount","index","checkingElementExists","winner","styles","container","console","log","position","top","right","gridBlock","StyleSheet","create","width","paddingHorizontal","alignItems","justifyContent","display","flexDirection","flexWrap","buttonWrapper","backgroundColor","heigth","color","textTransform","paddingVertical","flex","title","fontSize","topBlock","marginBottom"],"sources":["/home/jarik/work/tmp/TicTacToe-ReactNative/screens/GameWindow.js"],"sourcesContent":["import { StyleSheet, Text, View, TouchableOpacity , Button, Image , Dimensions } from 'react-native';\nimport React, { useState,useEffect } from \"react\";\nimport Cells from './Cells';\nimport reset from '../assets/reset.png'\nimport { Square } from 'native-base';\nimport Cell from './Cell';\n\nexport default function GameWindow({route}) {\n  const { player } = route.params;\n  const [circleOrCross, setCircleOrCross] = useState(true)\n  const [gridArr, setGridArr] = useState(['','','','','','','','',''])\n  const [showCircleOrCross, setShowCircleOrCross] = useState(false)\n  const [result, setResult ] = useState([])\n  const getRandomNumber = () => {\n    const randomNumber = Date.now()\n    const quontityNumber = randomNumber.toString().length\n    const lastNumber = randomNumber.toString()\n   return lastNumber[quontityNumber - 1]\n  }\n  const victories = (arrForExamination) => {\n        const options = [\n          [0,1,2],\n          [3,4,5],\n          [6,7,8],\n          [0,3,6],\n          [1,4,7],\n          [2,5,8],\n          [0,4,8],\n          [2,4,6]\n        ]\n        for(let i = 0; i < options.length; i++ ) {\n          const [a,b,c] = options[i]\n            if(arrForExamination[a] && arrForExamination[a] === arrForExamination[b] && arrForExamination[a] === arrForExamination[c]) {\n              return [a,b,c]\n            }\n        }\n        return null\n  }\n\n  const autoClick = () => {\n    if(victories(gridArr)) return\n    const examination =  gridArr.filter((el)=> el === '')\n      if(examination.length === 0)  return \n    setShowCircleOrCross(true)\n    const randomMove = getRandomNumber()\n      if(randomMove === '9') {return autoClick() }\n    const checkingElementExistsAutoClick = [...gridArr]\n      if (checkingElementExistsAutoClick[randomMove]) {\n        return autoClick()\n      }\n    checkingElementExistsAutoClick[randomMove] = circleOrCross ? 'x' : 'o'\n    setGridArr(checkingElementExistsAutoClick)\n    setCircleOrCross(!circleOrCross)\n  }\n\nuseEffect(()=> {\n  if(player === 1 && !circleOrCross) {\n    autoClick()\n  }\n},[circleOrCross,player])\n\n  const clickCount = (index) => {\n    setShowCircleOrCross(true)\n    const checkingElementExists = [...gridArr]\n      if(victories(gridArr) || checkingElementExists[index]) return \n    checkingElementExists[index] = circleOrCross ? 'x' : 'o'\n    setGridArr(checkingElementExists)\n    setCircleOrCross(!circleOrCross)\n    }\n\n    useEffect(()=> {\n      const winner =  victories(gridArr)\n      if(winner && winner.length === 3) setResult(winner)\n     \n    },[gridArr])\n    return (\n      <View style={styles.container}>\n              {  console.log('GameWindow')}\n          <Button title='1'\n          onPress={() => { \n            autoClick()\n          }}>\n\n          </Button>\n          <TouchableOpacity  style={{\n                position: 'absolute',\n                top: '5%', \n                right: '10%',\n                }} \n                onPress={() => { \n                  setGridArr(['','','','','','','','',''])\n                  setCircleOrCross(true)\n                  setShowCircleOrCross(false)\n                  setResult([])\n            }}>\n                  <Image  \n                    source={reset}>\n                  </Image>\n          </TouchableOpacity>\n        {/* <Cells result={result} showCircleOrCross={showCircleOrCross}  gridArr={gridArr} clickEl={clickCount}/> */}\n        <View style={styles.gridBlock}>\n        <Cell \n            result={result.filter(el => el  === 0)}\n            key={0}\n            value={gridArr[0]} \n            index={0} \n            clickEL={clickCount}\n            />\n             <Cell \n            result={result.filter(el => el  === 1)}\n            key={1}\n            value={gridArr[1]}  \n            index={1} \n            clickEL={clickCount}\n            />\n             <Cell \n            result={result.filter(el => el  === 2)}\n            key={2}\n            value={gridArr[2]}  \n            index={2} \n            clickEL={clickCount}\n            />\n             <Cell \n            result={result.filter(el => el  === 3)}\n            key={3}\n            value={gridArr[3]}  \n            index={3} \n            clickEL={clickCount}\n            />\n             <Cell \n            result={result.filter(el => el  === 4)}\n            key={4}\n            value={gridArr[4]}  \n            index={4} \n            clickEL={clickCount}\n            />\n             <Cell \n            result={result.filter(el => el  === 5)}\n            key={5}\n            value={gridArr[5]}  \n            index={5} \n            clickEL={clickCount}\n            />\n             <Cell \n            result={result.filter(el => el  === 6)}\n            key={6}\n            value={gridArr[6]}  \n            index={6} \n            clickEL={clickCount}\n            />\n             <Cell \n            result={result.filter(el => el  === 7)}\n            key={7}\n            value={gridArr[7]}  \n            index={7} \n            clickEL={clickCount}c\n            />\n             <Cell \n            result={result.filter(el => el  === 8)}\n            key={8}\n            value={gridArr[8]}  \n            index={8} \n            clickEL={clickCount}\n            />\n              </View>\n      </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n  gridBlock: {\n    width: 320,\n    paddingHorizontal:10,\n    alignItems:'center',\n    justifyContent:'center',\n    display:'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n  },\n  buttonWrapper: {\n    backgroundColor:'#000',\n    width:80,\n    heigth: 20,\n    position: 'absolute' ,\n    top: '5%', \n    right: '5%', \n    width:80, \n    heigth: 20, \n    color:'#000',\n    flexDirection:'row',\n    textTransform:'uppercase'\n  },\n  container: {\n    paddingHorizontal:15,\n    paddingVertical:15,\n    flex: 1,\n    backgroundColor: '#000',\n    alignItems:\"center\",\n    justifyContent:'center'\n  },\n  title: {\n    top:0,\n    textTransform:\"uppercase\",\n    color:\"white\",\n    fontSize:15,\n  },\n  topBlock: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    marginBottom:'10%'\n  },\n  gridBlock: {\n    width: 320,\n    paddingHorizontal:10,\n    alignItems:'center',\n    justifyContent:'center',\n    display:'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n  },\n  // cell: {\n  //   width:100,\n  //   height: 100,\n  //   backgroundColor: '#000',\n  //   borderStyle:'solid',\n  //   borderColor:'white',\n  //   borderWidth: 2,\n  // }\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}