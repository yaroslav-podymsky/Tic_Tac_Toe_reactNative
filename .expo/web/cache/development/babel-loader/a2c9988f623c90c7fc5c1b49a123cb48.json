{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useStyledSystemPropsResolver } from \"../useStyledSystemPropsResolver\";\nimport { useNativeBaseConfig } from \"../../core/NativeBaseContext\";\nimport { isResponsiveAnyProp } from \"../../theme/tools\";\nimport { useTheme } from \"../useTheme\";\nimport { useMemo } from 'react';\nimport stableHash from 'stable-hash';\nexport var useSx = function useSx() {\n  var isSSR = useNativeBaseConfig('useBreakpointResolvedProps').isSSR;\n  var theme = useTheme();\n\n  var Sx = function Sx(query) {\n    var StableHashQuery = stableHash(query);\n    var checkWarning = useMemo(function () {\n      return isResponsiveAnyProp(query, theme);\n    }, [StableHashQuery]);\n\n    if (isSSR && checkWarning) {\n      console.warn(\"useSx prop doesn't resolve responsive prop with SSR\");\n    }\n\n    var _useStyledSystemProps = useStyledSystemPropsResolver(query),\n        _useStyledSystemProps2 = _slicedToArray(_useStyledSystemProps, 3),\n        _style = _useStyledSystemProps2[0],\n        _restProps = _useStyledSystemProps2[1],\n        styleFromProps = _useStyledSystemProps2[2];\n\n    return styleFromProps;\n  };\n\n  return Sx;\n};","map":{"version":3,"sources":["index.ts"],"names":["useSx","isSSR","useNativeBaseConfig","theme","useTheme","Sx","query","StableHashQuery","stableHash","checkWarning","useMemo","isResponsiveAnyProp","console","useStyledSystemPropsResolver"],"mappings":";AAAA,SAAA,4BAAA;AACA,SAAA,mBAAA;AACA,SAAA,mBAAA;AACA,SAAA,QAAA;AACA,SAAA,OAAA,QAAA,OAAA;AAEA,OAAA,UAAA,MAAA,aAAA;AAGA,OAAO,IAAMA,KAAK,GAAG,SAARA,KAAQ,GAAM;EACzB,IAAMC,KAAK,GAAGC,mBAAmB,CAAnBA,4BAAmB,CAAnBA,CAAd,KAAA;EACA,IAAMC,KAAK,GAAGC,QAAd,EAAA;;EACA,IAAMC,EAAE,GAAIC,SAAND,EAAMC,CAAAA,KAAD,EAAwB;IACjC,IAAMC,eAAe,GAAGC,UAAU,CAAlC,KAAkC,CAAlC;IACA,IAAMC,YAAY,GAAGC,OAAO,CAAC,YAAM;MACjC,OAAOC,mBAAmB,CAAA,KAAA,EADO,KACP,CAA1B;IAD0B,CAAA,EAGzB,CAHH,eAGG,CAHyB,CAA5B;;IAKA,IAAIV,KAAK,IAAT,YAAA,EAA2B;MACzBW,OAAO,CAAPA,IAAAA,CAAAA,qDAAAA;IAR+B;;IAWjC,4BAA6CC,4BAA4B,CAAzE,KAAyE,CAAzE;IAAA;IAAA,IAAM,MAAN;IAAA,IAAM,UAAN;IAAA,IAAM,cAAN;;IAIA,OAAA,cAAA;EAfF,CAAA;;EAiBA,OAAA,EAAA;AApBK,CAAA","sourcesContent":["import { useStyledSystemPropsResolver } from '../useStyledSystemPropsResolver';\nimport { useNativeBaseConfig } from '../../core/NativeBaseContext';\nimport { isResponsiveAnyProp } from '../../theme/tools';\nimport { useTheme } from '../useTheme';\nimport { useMemo } from 'react';\n//@ts-ignore\nimport stableHash from 'stable-hash';\nimport type { StyledProps } from '../../theme/types';\n\nexport const useSx = () => {\n  const isSSR = useNativeBaseConfig('useBreakpointResolvedProps').isSSR;\n  const theme = useTheme();\n  const Sx = (query: StyledProps) => {\n    const StableHashQuery = stableHash(query);\n    const checkWarning = useMemo(() => {\n      return isResponsiveAnyProp(query, theme);\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [StableHashQuery]);\n\n    if (isSSR && checkWarning) {\n      console.warn(\"useSx prop doesn't resolve responsive prop with SSR\");\n    }\n    // eslint-disable-next-line\n    const [_style, _restProps, styleFromProps] = useStyledSystemPropsResolver(\n      query\n    );\n\n    return styleFromProps;\n  };\n  return Sx;\n};\n"]},"metadata":{},"sourceType":"module"}