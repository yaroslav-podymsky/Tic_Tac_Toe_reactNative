{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport React, { useState, useEffect } from \"react\";\nimport circle from \"../assets/circle.png\";\nimport cross from \"../assets/cross.png\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default React.memo(function Cell(_ref) {\n  var value = _ref.value,\n      index = _ref.index,\n      clickEL = _ref.clickEL,\n      result = _ref.result;\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      cellStyle = _useState2[0],\n      setCellStyle = _useState2[1];\n\n  var styles = StyleSheet.create({\n    cell: cellStyle\n  });\n  useEffect(function () {\n    switch (index) {\n      case 0:\n        setCellStyle({\n          width: 100,\n          height: 100,\n          backgroundColor: '#000',\n          alignItems: 'center',\n          justifyContent: 'center',\n          borderStyle: 'solid',\n          borderRightColor: 'white',\n          borderBottomColor: 'white',\n          borderWidth: 2\n        });\n        break;\n\n      case 1:\n        setCellStyle({\n          width: 100,\n          height: 100,\n          backgroundColor: '#000',\n          alignItems: 'center',\n          justifyContent: 'center',\n          borderStyle: 'solid',\n          borderBottomColor: 'white',\n          borderLeftColor: 'white',\n          borderRightColor: 'white',\n          borderWidth: 2\n        });\n        break;\n\n      case 2:\n        setCellStyle({\n          width: 100,\n          height: 100,\n          backgroundColor: '#000',\n          alignItems: 'center',\n          justifyContent: 'center',\n          borderStyle: 'solid',\n          borderLeftColor: 'white',\n          borderBottomColor: 'white',\n          borderWidth: 2\n        });\n        break;\n\n      case 3:\n        setCellStyle({\n          width: 100,\n          height: 100,\n          backgroundColor: '#000',\n          alignItems: 'center',\n          justifyContent: 'center',\n          borderStyle: 'solid',\n          borderTopColor: 'white',\n          borderRightColor: 'white',\n          borderBottomColor: 'white',\n          borderLeftColor: '#000',\n          borderWidth: 2\n        });\n        break;\n\n      case 4:\n        setCellStyle({\n          width: 100,\n          height: 100,\n          backgroundColor: '#000',\n          alignItems: 'center',\n          justifyContent: 'center',\n          borderStyle: 'solid',\n          borderColor: 'white',\n          borderWidth: 2\n        });\n        break;\n\n      case 5:\n        setCellStyle({\n          width: 100,\n          height: 100,\n          backgroundColor: '#000',\n          alignItems: 'center',\n          justifyContent: 'center',\n          borderStyle: 'solid',\n          borderColor: 'white',\n          borderRightColor: '#000',\n          borderWidth: 2\n        });\n        break;\n\n      case 6:\n        setCellStyle({\n          width: 100,\n          height: 100,\n          backgroundColor: '#000',\n          alignItems: 'center',\n          justifyContent: 'center',\n          borderStyle: 'solid',\n          borderColor: 'white',\n          borderBottomColor: '#000',\n          borderLeftColor: '#000',\n          borderWidth: 2\n        });\n        break;\n\n      case 7:\n        setCellStyle({\n          width: 100,\n          height: 100,\n          backgroundColor: '#000',\n          alignItems: 'center',\n          justifyContent: 'center',\n          borderStyle: 'solid',\n          borderColor: 'white',\n          borderBottomColor: '#000',\n          borderWidth: 2\n        });\n        break;\n\n      case 8:\n        setCellStyle({\n          width: 100,\n          height: 100,\n          backgroundColor: '#000',\n          alignItems: 'center',\n          justifyContent: 'center',\n          borderStyle: 'solid',\n          borderColor: 'white',\n          borderRightColor: '#000',\n          borderBottomColor: '#000',\n          borderWidth: 2\n        });\n        break;\n    }\n  }, [index]);\n  useEffect(function () {\n    console.log('new', {\n      value: value,\n      index: index,\n      clickEL: clickEL,\n      result: result\n    });\n  }, [value, index, clickEL, result]);\n  return _jsx(TouchableOpacity, {\n    style: styles.cell,\n    onPress: function onPress() {\n      clickEL(index);\n      console.log('clickEL(index)', index);\n    },\n    children: value ? _jsx(Image, {\n      style: result.length === 0 ? {\n        width: 60,\n        height: 60\n      } : {\n        width: 100,\n        height: 100\n      },\n      source: value === 'x' ? cross : value === 'o' ? circle : null\n    }) : null\n  });\n});","map":{"version":3,"names":["React","useState","useEffect","circle","cross","memo","Cell","value","index","clickEL","result","cellStyle","setCellStyle","styles","StyleSheet","create","cell","width","height","backgroundColor","alignItems","justifyContent","borderStyle","borderRightColor","borderBottomColor","borderWidth","borderLeftColor","borderTopColor","borderColor","console","log","length"],"sources":["/home/jarik/work/tmp/TicTacToe-ReactNative/screens/Cell.js"],"sourcesContent":["\nimport { StyleSheet, TouchableOpacity, Image } from 'react-native';\nimport React, { useState, useEffect } from \"react\";\nimport circle from '../assets/circle.png'\nimport cross from '../assets/cross.png'\n\n\nexport default React.memo(function Cell({value,index,clickEL,result}) {\n    const [cellStyle, setCellStyle] = useState({})\n    const styles = StyleSheet.create({\n        cell: cellStyle\n      });\n    useEffect(() => {\n        switch(index) {\n            case 0:\n                setCellStyle({\n                width:100,\n                height: 100,\n                backgroundColor: '#000',\n                alignItems:'center',\n                justifyContent:'center',\n                borderStyle:'solid',\n                borderRightColor:'white',\n                borderBottomColor:'white',\n                borderWidth: 2,\n            })\n            break\n            case 1:\n                setCellStyle({\n                    width:100,\n                    height: 100,\n                    backgroundColor: '#000',\n                    alignItems:'center',\n                    justifyContent:'center',\n                    borderStyle:'solid',\n                    borderBottomColor:'white',\n                    borderLeftColor:'white',\n                    borderRightColor:'white',\n                    borderWidth: 2,\n                })\n                break\n            case 2:\n                setCellStyle({\n                    width:100,\n                    height: 100,\n                    backgroundColor: '#000',\n                    alignItems:'center',\n                    justifyContent:'center',\n                    borderStyle:'solid',\n                    borderLeftColor:'white',\n                    borderBottomColor:'white',\n                    borderWidth: 2,\n                })\n                break\n            case 3:\n                setCellStyle({\n                    width:100,\n                    height: 100,\n                    backgroundColor: '#000',\n                    alignItems:'center',\n                    justifyContent:'center',\n                    borderStyle:'solid',\n                    borderTopColor:'white',\n                    borderRightColor:'white',\n                    borderBottomColor:'white',\n                    borderLeftColor:'#000',\n                    borderWidth: 2,\n                })\n                break\n            case 4:\n                setCellStyle({\n                    width:100,\n                    height: 100,\n                    backgroundColor: '#000',\n                    alignItems:'center',\n                    justifyContent:'center',\n                    borderStyle:'solid',\n                    borderColor:'white',\n                    borderWidth: 2,\n                })\n                break\n            case 5:\n                setCellStyle({\n                    width:100,\n                    height: 100,\n                    backgroundColor: '#000',\n                    alignItems:'center',\n                    justifyContent:'center',\n                    borderStyle:'solid',\n                    borderColor:'white',\n                    borderRightColor:'#000',\n                    borderWidth: 2,\n                })\n                break\n            case 6:\n                setCellStyle({\n                    width:100,\n                    height: 100,\n                    backgroundColor: '#000',\n                    alignItems:'center',\n                    justifyContent:'center',\n                    borderStyle:'solid',\n                    borderColor:'white',\n                    borderBottomColor:'#000',\n                    borderLeftColor:'#000',\n                    borderWidth: 2,\n                })\n                break\n            case 7:\n                setCellStyle({\n                    width:100,\n                    height: 100,\n                    backgroundColor: '#000',\n                    alignItems:'center',\n                    justifyContent:'center',\n                    borderStyle:'solid',\n                    borderColor:'white',\n                    borderBottomColor:'#000',\n                    borderWidth: 2,\n                })\n                break\n                case 8:\n                setCellStyle({\n                    width:100,\n                    height: 100,\n                    backgroundColor: '#000',\n                    alignItems:'center',\n                    justifyContent:'center',\n                    borderStyle:'solid',\n                    borderColor:'white',\n                    borderRightColor:'#000',\n                    borderBottomColor:'#000',\n                    borderWidth: 2,\n                })\n                break\n\n       \n          }\n      },[index]);\nuseEffect(()=> {\n    console.log('new',{value,index,clickEL,result})\n},[value,index,clickEL,result])\n  return (\n    <TouchableOpacity style={styles.cell} onPress={() => {\n        clickEL(index)\n        console.log('clickEL(index)',index);\n    }}>\n    {value ?  <Image  style={result.length === 0 ? { width: 60, height: 60}:{width: 100, height: 100}}  source={value === 'x' ? cross :value === 'o' ? circle: null} />: null} \n       \n    </TouchableOpacity>\n  )\n\n})\n\n\n"],"mappings":";;;;AAEA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP;AACA,OAAOC,KAAP;;AAGA,eAAeJ,KAAK,CAACK,IAAN,CAAW,SAASC,IAAT,OAA4C;EAAA,IAA7BC,KAA6B,QAA7BA,KAA6B;EAAA,IAAvBC,KAAuB,QAAvBA,KAAuB;EAAA,IAAjBC,OAAiB,QAAjBA,OAAiB;EAAA,IAATC,MAAS,QAATA,MAAS;;EAClE,gBAAkCT,QAAQ,CAAC,EAAD,CAA1C;EAAA;EAAA,IAAOU,SAAP;EAAA,IAAkBC,YAAlB;;EACA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;IAC7BC,IAAI,EAAEL;EADuB,CAAlB,CAAf;EAGAT,SAAS,CAAC,YAAM;IACZ,QAAOM,KAAP;MACI,KAAK,CAAL;QACII,YAAY,CAAC;UACbK,KAAK,EAAC,GADO;UAEbC,MAAM,EAAE,GAFK;UAGbC,eAAe,EAAE,MAHJ;UAIbC,UAAU,EAAC,QAJE;UAKbC,cAAc,EAAC,QALF;UAMbC,WAAW,EAAC,OANC;UAObC,gBAAgB,EAAC,OAPJ;UAQbC,iBAAiB,EAAC,OARL;UASbC,WAAW,EAAE;QATA,CAAD,CAAZ;QAWJ;;MACA,KAAK,CAAL;QACIb,YAAY,CAAC;UACTK,KAAK,EAAC,GADG;UAETC,MAAM,EAAE,GAFC;UAGTC,eAAe,EAAE,MAHR;UAITC,UAAU,EAAC,QAJF;UAKTC,cAAc,EAAC,QALN;UAMTC,WAAW,EAAC,OANH;UAOTE,iBAAiB,EAAC,OAPT;UAQTE,eAAe,EAAC,OARP;UASTH,gBAAgB,EAAC,OATR;UAUTE,WAAW,EAAE;QAVJ,CAAD,CAAZ;QAYA;;MACJ,KAAK,CAAL;QACIb,YAAY,CAAC;UACTK,KAAK,EAAC,GADG;UAETC,MAAM,EAAE,GAFC;UAGTC,eAAe,EAAE,MAHR;UAITC,UAAU,EAAC,QAJF;UAKTC,cAAc,EAAC,QALN;UAMTC,WAAW,EAAC,OANH;UAOTI,eAAe,EAAC,OAPP;UAQTF,iBAAiB,EAAC,OART;UASTC,WAAW,EAAE;QATJ,CAAD,CAAZ;QAWA;;MACJ,KAAK,CAAL;QACIb,YAAY,CAAC;UACTK,KAAK,EAAC,GADG;UAETC,MAAM,EAAE,GAFC;UAGTC,eAAe,EAAE,MAHR;UAITC,UAAU,EAAC,QAJF;UAKTC,cAAc,EAAC,QALN;UAMTC,WAAW,EAAC,OANH;UAOTK,cAAc,EAAC,OAPN;UAQTJ,gBAAgB,EAAC,OARR;UASTC,iBAAiB,EAAC,OATT;UAUTE,eAAe,EAAC,MAVP;UAWTD,WAAW,EAAE;QAXJ,CAAD,CAAZ;QAaA;;MACJ,KAAK,CAAL;QACIb,YAAY,CAAC;UACTK,KAAK,EAAC,GADG;UAETC,MAAM,EAAE,GAFC;UAGTC,eAAe,EAAE,MAHR;UAITC,UAAU,EAAC,QAJF;UAKTC,cAAc,EAAC,QALN;UAMTC,WAAW,EAAC,OANH;UAOTM,WAAW,EAAC,OAPH;UAQTH,WAAW,EAAE;QARJ,CAAD,CAAZ;QAUA;;MACJ,KAAK,CAAL;QACIb,YAAY,CAAC;UACTK,KAAK,EAAC,GADG;UAETC,MAAM,EAAE,GAFC;UAGTC,eAAe,EAAE,MAHR;UAITC,UAAU,EAAC,QAJF;UAKTC,cAAc,EAAC,QALN;UAMTC,WAAW,EAAC,OANH;UAOTM,WAAW,EAAC,OAPH;UAQTL,gBAAgB,EAAC,MARR;UASTE,WAAW,EAAE;QATJ,CAAD,CAAZ;QAWA;;MACJ,KAAK,CAAL;QACIb,YAAY,CAAC;UACTK,KAAK,EAAC,GADG;UAETC,MAAM,EAAE,GAFC;UAGTC,eAAe,EAAE,MAHR;UAITC,UAAU,EAAC,QAJF;UAKTC,cAAc,EAAC,QALN;UAMTC,WAAW,EAAC,OANH;UAOTM,WAAW,EAAC,OAPH;UAQTJ,iBAAiB,EAAC,MART;UASTE,eAAe,EAAC,MATP;UAUTD,WAAW,EAAE;QAVJ,CAAD,CAAZ;QAYA;;MACJ,KAAK,CAAL;QACIb,YAAY,CAAC;UACTK,KAAK,EAAC,GADG;UAETC,MAAM,EAAE,GAFC;UAGTC,eAAe,EAAE,MAHR;UAITC,UAAU,EAAC,QAJF;UAKTC,cAAc,EAAC,QALN;UAMTC,WAAW,EAAC,OANH;UAOTM,WAAW,EAAC,OAPH;UAQTJ,iBAAiB,EAAC,MART;UASTC,WAAW,EAAE;QATJ,CAAD,CAAZ;QAWA;;MACA,KAAK,CAAL;QACAb,YAAY,CAAC;UACTK,KAAK,EAAC,GADG;UAETC,MAAM,EAAE,GAFC;UAGTC,eAAe,EAAE,MAHR;UAITC,UAAU,EAAC,QAJF;UAKTC,cAAc,EAAC,QALN;UAMTC,WAAW,EAAC,OANH;UAOTM,WAAW,EAAC,OAPH;UAQTL,gBAAgB,EAAC,MARR;UASTC,iBAAiB,EAAC,MATT;UAUTC,WAAW,EAAE;QAVJ,CAAD,CAAZ;QAYA;IAzHR;EA6HD,CA9HM,EA8HL,CAACjB,KAAD,CA9HK,CAAT;EA+HJN,SAAS,CAAC,YAAK;IACX2B,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAkB;MAACvB,KAAK,EAALA,KAAD;MAAOC,KAAK,EAALA,KAAP;MAAaC,OAAO,EAAPA,OAAb;MAAqBC,MAAM,EAANA;IAArB,CAAlB;EACH,CAFQ,EAEP,CAACH,KAAD,EAAOC,KAAP,EAAaC,OAAb,EAAqBC,MAArB,CAFO,CAAT;EAGE,OACE,KAAC,gBAAD;IAAkB,KAAK,EAAEG,MAAM,CAACG,IAAhC;IAAsC,OAAO,EAAE,mBAAM;MACjDP,OAAO,CAACD,KAAD,CAAP;MACAqB,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA6BtB,KAA7B;IACH,CAHD;IAAA,UAICD,KAAK,GAAI,KAAC,KAAD;MAAQ,KAAK,EAAEG,MAAM,CAACqB,MAAP,KAAkB,CAAlB,GAAsB;QAAEd,KAAK,EAAE,EAAT;QAAaC,MAAM,EAAE;MAArB,CAAtB,GAA+C;QAACD,KAAK,EAAE,GAAR;QAAaC,MAAM,EAAE;MAArB,CAA9D;MAA0F,MAAM,EAAEX,KAAK,KAAK,GAAV,GAAgBH,KAAhB,GAAuBG,KAAK,KAAK,GAAV,GAAgBJ,MAAhB,GAAwB;IAAjJ,EAAJ,GAA+J;EAJrK,EADF;AAUD,CAjJc,CAAf"},"metadata":{},"sourceType":"module"}